openapi: 3.0.0
info:
  version: 0.0.1
  title: Some cool title
  description: Awesome description
servers: []
paths:
  /pets:
    get:
      description: Returns all pets from the system that the user has access to
      responses:
        "200":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Pet'
          description: A list of pets.
        "302":
          content: {}
          description: Trip Signals Redirection
          headers:
            Location:
              description: The url to the signal API
              schema:
                type: string
      tags:
      - pet
      parameters:
      - in: path
        name: deviceId
        schema:
          type: integer
          enum:
          - "3"
          - "4"
        required: true
        description: Numeric ID of the user to get
      security:
      - petstore_auth:
        - write:pets
        - read:pets
    post:
      description: Returns all pets from the system that the user has access to
      responses:
        "201":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Pet'
          description: Post a new pet
      parameters: []
      requestBody:
        description: Pet to add to the store
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Pet'
components:
  schemas:
    AnyValue:
      description: 'Can be anything: string, number, array, object, etc., including
        `null`'
    Dog:
      allOf:
      - $ref: '#/components/schemas/Pet'
      - $ref: '#/components/schemas/WeirdCustomName'
      - type: object
        properties:
          name:
            type: string
    EditableFoo:
      type: object
      properties:
        string:
          type: string
    Foo:
      type: object
      properties:
        string:
          type: string
    MapStringString: null
    Pet:
      required:
      - string
      type: object
      properties:
        ByteData:
          type: string
          format: binary
        IntData:
          type: object
          additionalProperties:
            type: integer
        children:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/Pet'
        enumTest:
          type: string
          enum:
          - UNKNOWN
          - MALE
          - FEMALE
        external_data:
          $ref: '#/components/schemas/WeirdCustomName'
        id:
          type: string
        int:
          type: integer
        interface:
          $ref: '#/components/schemas/AnyValue'
        pointerOfString:
          nullable: true
          type: string
        pointerOfStruct:
          nullable: true
          $ref: '#/components/schemas/Foo'
        pointerOfTime:
          nullable: true
          type: string
          format: date-time
        sliceOfStruct:
          type: array
          items:
            $ref: '#/components/schemas/Foo'
        sliceofInt:
          type: array
          items:
            type: integer
        sliceofSliceofFloat:
          type: array
          items:
            items:
              type: number
            type: array
        sliceofString:
          type: array
          items:
            type: string
        strData:
          type: object
          additionalProperties:
            type: string
        string:
          type: string
        struct:
          $ref: '#/components/schemas/Foo'
        struct_correct_name:
          $ref: '#/components/schemas/EditableFoo'
        time:
          type: string
          format: date-time
    Signals:
      type: array
      items:
        $ref: '#/components/schemas/Foo'
    WeirdCustomName:
      type: object
      properties:
        some_string:
          type: string
